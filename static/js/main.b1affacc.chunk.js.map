{"version":3,"sources":["components/LoginForm.jsx","components/LocationForm.jsx","App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","validUser","validPass","inputUser","inputPass","loginSuccess","errors","element","message","setState","prevState","concat","toConsumableArray","newArr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","value","push","return","e","target","clearValidationErr","preventDefault","showValidationErr","validLogin","usernameErr","passwordErr","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","react_default","a","createElement","className","onSubmit","submitLogin","bind","htmlFor","type","onChange","onUsernameChange","onPasswordChange","React","Component","LocationForm","latitude","longitude","city","success","errorMsg","getWeather","lat","long","_this2","axios","get","then","response","relativeLocation","data","properties","catch","error","latErr","longErr","submitLocation","onLatChange","onLongChange","App","isLoggedIn","components_LoginForm","components_LocationForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1affacc.chunk.js","sourcesContent":["import React from 'react'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validUser: 'Foo',\n      validPass: 'Bar',\n      inputUser: '',\n      inputPass: '',\n      loginSuccess: false,\n      errors: []\n    }\n  }\n\n  showValidationErr(element, message) {\n    this.setState((prevState) => ( { errors: [...prevState.errors, { element, message }] } ));\n  }\n\n  clearValidationErr(element) {\n    this.setState((prevState) => {\n      let newArr = [];\n      for(let err of prevState.errors) {\n        if(element !== err.element) {\n          newArr.push(err)\n        }\n      }\n      return {errors: newArr};\n    });\n  }\n\n  onUsernameChange(e) {\n    this.setState({ inputUser: e.target.value });\n    this.clearValidationErr(\"username\");\n  };\n\n  onPasswordChange(e) {\n    this.setState({ inputPass: e.target.value });\n    this.clearValidationErr(\"password\");\n  };\n\n  submitLogin(e) {\n    e.preventDefault();\n    if(this.state.inputUser !== this.state.validUser) {\n      this.showValidationErr(\"username\", \"Incorrect Username\")\n    }\n    if(this.state.inputUser === \"\") {\n      this.showValidationErr(\"username\", \"Username cannot be empty\")\n    }\n    if(this.state.inputPass !== this.state.validPass) {\n      this.showValidationErr(\"password\", \"Incorrect Password\")\n    }\n    if(this.state.inputPass === \"\") {\n      this.showValidationErr(\"password\", \"Password cannot be empty\");\n    }\n    if(this.state.inputUser === this.state.validUser && this.state.inputPass === this.state.validPass) {\n      this.validLogin();\n    }\n  }\n\n  validLogin() {\n    this.setState({ loginSuccess: true })\n    this.props.validLogin(this.state.loginSuccess);\n  }\n\n\n  render() {\n\n    let usernameErr = null, passwordErr = null;\n\n    for(let err of this.state.errors) {\n      if(err.element === \"username\") {\n        usernameErr = err.message;\n      }\n      if(err.element === \"password\") {\n        passwordErr = err.message;\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"hint\">\n          <p><strong>Hint:</strong></p>\n          <p>Username: Foo</p>\n          <p>Password: Bar</p>\n        </div>\n        <div className=\"inner-container\">\n          <form onSubmit={this.submitLogin.bind(this)}>\n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                className={\"form-input \" + (usernameErr ? \"invalid\" : \"\")}\n                onChange={this.onUsernameChange.bind(this)} />\n              <small>{ usernameErr ? usernameErr : \"\" }</small>\n            </div>\n\n            <div className=\"input-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                className={\"form-input \" + (passwordErr ? \"invalid\" : \"\")}\n                onChange={this.onPasswordChange.bind(this)} />\n              <small>{ passwordErr ? passwordErr : \"\" }</small>\n            </div>\n\n            <button type=\"submit\" className=\"submit-button\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport axios from 'axios';\n\nclass LocationForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: '',\n      longitude: '',\n      city: '',\n      state: '',\n      success: null,\n      errorMsg: null,\n      errors: []\n    }\n  }\n\n  showValidationErr(element, message) {\n    this.setState((prevState) => ( { errors: [...prevState.errors, { element, message }] } ));\n  }\n\n  clearValidationErr(element) {\n    this.setState((prevState) => {\n      let newArr = [];\n      for(let err of prevState.errors) {\n        if(element !== err.element) {\n          newArr.push(err)\n        }\n      }\n      return {errors: newArr};\n    });\n  }\n\n  onLatChange(e) {\n    this.setState({ latitude: e.target.value });\n    this.clearValidationErr(\"latitude\");\n  }\n\n  onLongChange(e) {\n    this.setState({ longitude: e.target.value });\n    this.clearValidationErr(\"longitude\");\n  }\n\n  submitLocation(e) {\n    e.preventDefault();\n    this.getWeather(this.state.latitude, this.state.longitude);\n  }\n\n  getWeather(lat, long) {\n    axios.get('https://api.weather.gov/points/' + lat + ',' + long).then((response) => {\n      const relativeLocation = response.data.properties.relativeLocation.properties;\n      this.setState({\n        city: relativeLocation.city,\n        state: relativeLocation.state,\n        success: true\n      })\n    }).catch(error => {\n      this.setState({\n        success: false,\n        errorMsg: 'Invalid Point'\n      });\n    })\n  }\n\n  render() {\n\n    let latErr = null, longErr = null;\n\n    for(let err of this.state.errors) {\n      if(err.element === \"latitude\") {\n        latErr = err.message;\n      }\n      if(err.element === \"longitude\") {\n        longErr = err.message;\n      }\n    }\n\n    return(\n      <div>\n        <div className=\"hint\">\n          <p><strong>Hint:</strong></p>\n          <p>Latitude: 39.7456</p>\n          <p>Longitude: -97.0892</p>\n        </div>\n        <div className=\"inner-container location-form\">\n          <form onSubmit={this.submitLocation.bind(this)}>\n            <div className=\"input-group\">\n              <label htmlFor=\"latitude\">Latitude</label>\n              <input\n                type=\"text\"\n                className={\"form-input \" + (latErr ? \"invalid\" : \"\")}\n                onChange={this.onLatChange.bind(this)}/>\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"longitude\">Longitude</label>\n              <input\n                type=\"text\"\n                className={\"form-input \" + (longErr ? \"invalid\" : \"\")}\n                onChange={this.onLongChange.bind(this)}/>\n            </div>\n\n            <input\n              type=\"submit\"\n              className=\"submit-button\"\n              value=\"Submit\"\n            />\n          </form>\n        </div>\n\n        <div className=\"location-display\">\n          { this.state.success &&\n          <div className=\"success-location\">\n            <h4>You are located in:</h4>\n            <h3>{this.state.city}, {this.state.state}</h3>\n          </div>\n          }\n          { this.state.success === false &&\n            <div className=\"invalid-location\">\n              <h3>{this.state.errorMsg}</h3>\n            </div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LocationForm;\n","import React from 'react';\n\nimport LoginForm from './components/LoginForm';\nimport LocationForm from './components/LocationForm';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    }\n  }\n\n  loginSuccess(response) {\n    this.setState({ isLoggedIn: response });\n  };\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        { !this.state.isLoggedIn &&\n            <LoginForm validLogin={this.loginSuccess.bind(this)}/>\n        }\n\n        { this.state.isLoggedIn && <LocationForm /> }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}